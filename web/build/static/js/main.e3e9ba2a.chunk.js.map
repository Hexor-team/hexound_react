{"version":3,"sources":["store/redusers.js","store/defineStrings.js","store/store.js","components/TackList/TrackList.js","store/actions.js","components/TackList/TrackListContainer.js","components/Pult/Pult.js","components/Pult/PultContainer.js","components/GrabnDrop/GrabnDrop.js","components/GrabnDrop/GrabnDropContainer.js","components/Credits/Credits.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","trackList","isPlay","currentTrack","palayerRedusers","combineReducers","playerData","state","action","type","payload","store","createStore","TrackList","this","props","Component","getTrackList","array","togglePlay","bool","setCurrentTrack","obj","TrackListContainer","mapDispatchToProps","connect","track","play","console","log","PultContainer","Credits","App","GrabnDropContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3e9ba2a.chunk.js","sourcesContent":["\r\nimport { combineReducers } from \"redux\"; \r\nimport { GET_TRACK_LIST,  TOGGLE_PLAY, CURRENT_TRACK } from './defineStrings';\r\nconst defaultState = {\r\n    trackList: [],\r\n    isPlay: false,\r\n    currentTrack: null\r\n}\r\n\r\nexport const playerReduser = ( state = defaultState, action ) => {\r\n    switch( action.type ){\r\n        case GET_TRACK_LIST:\r\n            return { ...state, trackList: action.payload }\r\n        case TOGGLE_PLAY:\r\n            return { ...state, isPlay: action.payload }\r\n        case CURRENT_TRACK: \r\n            return { ...state, currentTrack: action.payload }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport const palayerRedusers = combineReducers({\r\n    playerData: playerReduser\r\n});","export const GET_TRACK_LIST = 'GET_TRACK_LIST';\r\nexport const TOGGLE_PLAY = 'TOGGLE_PLAY';\r\nexport const CURRENT_TRACK = 'CURRENT_TRACK';","import { createStore } from 'redux';\r\nimport { palayerRedusers } from './redusers';\r\nexport const store = createStore(palayerRedusers);","import React, { Component } from 'react';\r\n\r\nexport default class TrackList extends Component{\r\n    render(){\r\n        \r\n        const { trackList: list } = this.props;\r\n        return(\r\n            <h2>TrackList</h2>\r\n        )\r\n    }\r\n}","import { GET_TRACK_LIST,  TOGGLE_PLAY, CURRENT_TRACK } from './defineStrings';\r\n\r\nexport const getTrackList = (array) => ({\r\n    type: GET_TRACK_LIST,\r\n    payload: array\r\n});\r\nexport const togglePlay = (bool) => ({\r\n    type: TOGGLE_PLAY,\r\n    payload: bool\r\n});\r\nexport const setCurrentTrack = (obj) => ({\r\n    type: CURRENT_TRACK,\r\n    payload: obj\r\n});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TrackList from './TrackList';\r\nimport { getTrackList } from '../../store/actions'; \r\n\r\nclass TrackListContainer extends Component{\r\n    render(){\r\n        return(\r\n            <TrackList\r\n                trackList={this.props.trackList}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        trackList: state.playerData.trackList,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    getTrackList: getTrackList\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackListContainer);","import React, { Component } from 'react';\r\n\r\nexport default class TrackList extends Component{\r\n    render(){       \r\n        const { trackList: list, track, play } = this.props;\r\n        console.log(track);\r\n        console.log(play);\r\n        return(\r\n            <h2>Pult, play: {`${play}`}, track: {track}</h2>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Pult from './Pult';\r\nimport { getTrackList, togglePlay, setCurrentTrack } from '../../store/actions'; \r\n\r\nclass PultContainer extends Component{\r\n    render(){\r\n        const { trackList, track, play} = this.props;\r\n        return(\r\n            <Pult\r\n                trackList={trackList}\r\n                track={track}\r\n                play={play}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        trackList: state.playerData.trackList,\r\n        track: state.playerData.currentTrack,\r\n        play: state.playerData.isPlay\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    getTrackList,\r\n    togglePlay,\r\n    setCurrentTrack\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PultContainer);","import React, { Component } from 'react';\r\n\r\nexport default class TrackList extends Component{\r\n    render(){       \r\n        const { trackList: list, track, play } = this.props;\r\n        console.log(track);\r\n        console.log(play);\r\n        return(\r\n            <h2>GrabnDrop, play: {`${play}`}, track: {track}</h2>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GrabnDrop from './GrabnDrop';\r\nimport { getTrackList, togglePlay, setCurrentTrack } from '../../store/actions'; \r\n\r\nclass PultContainer extends Component{\r\n    render(){\r\n        const { trackList, track, play} = this.props;\r\n        return(\r\n            <GrabnDrop\r\n                trackList={trackList}\r\n                track={track}\r\n                play={play}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        trackList: state.playerData.trackList,\r\n        track: state.playerData.currentTrack,\r\n        play: state.playerData.isPlay\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    getTrackList,\r\n    togglePlay,\r\n    setCurrentTrack\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PultContainer);","import React from 'react'\r\n\r\nexport const Credits = () => (\r\n    <div>hexound v2</div>\r\n);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './App.css';\nimport TrackListContainer from './components/TackList/TrackListContainer';\nimport PultContainer from './components/Pult/PultContainer';\nimport GrabnDropContainer from './components/GrabnDrop/GrabnDropContainer';\nimport { Credits } from './components/Credits/Credits';\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <div>\n          <GrabnDropContainer/>\n          <h1>hexor</h1>\n          <PultContainer/>\n          <TrackListContainer/>\n          <Credits/>\n        </div>\n      </Provider>\n    );\n  }  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}